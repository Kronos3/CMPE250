


ARM Macro Assembler    Page 1 Program Title for Listing Header Goes Here


    1 00000000                 TTL              Program Title for Listing Header Goes Here
    2 00000000         ;****************************************************************
    3 00000000         ;Descriptive comment header goes here.
    4 00000000         ;(What does the program do?)
    5 00000000         ;Name:  Andrei Tumbar
    6 00000000         ;Date:  8/25/2020
    7 00000000         ;Class:  CMPE-250
    8 00000000         ;Section:  1, Tuesday, 11 AM
    9 00000000         ;---------------------------------------------------------------
   10 00000000         ;Keil Simulator Template for KL46
   11 00000000         ;R. W. Melton
   12 00000000         ;January 5, 2018
   13 00000000         ;****************************************************************
   14 00000000         ;Assembler directives
   15 00000000                 THUMB
   17 00000000         ;****************************************************************
   18 00000000         ;EQUates
   19 00000000         ;Standard data masks
   20 00000000 000000FF 
                       BYTE_MASK
                               EQU              0xFF
   21 00000000 0000000F 
                       NIBBLE_MASK
                               EQU              0x0F
   22 00000000         ;Standard data sizes (in bits)
   23 00000000 00000008 
                       BYTE_BITS
                               EQU              8
   24 00000000 00000004 
                       NIBBLE_BITS
                               EQU              4
   25 00000000         ;Architecture data sizes (in bytes)
   26 00000000 00000004 
                       WORD_SIZE
                               EQU              4           ;Cortex-M0+
   27 00000000 00000002 
                       HALFWORD_SIZE
                               EQU              2           ;Cortex-M0+
   28 00000000         ;Architecture data masks
   29 00000000 0000FFFF 
                       HALFWORD_MASK
                               EQU              0xFFFF



ARM Macro Assembler    Page 2 Program Title for Listing Header Goes Here


   30 00000000         ;Return                 
   31 00000000 00000001 
                       RET_ADDR_T_MASK
                               EQU              1           ;Bit 0 of ret. addr. must be
   32 00000000         ;set for BX, BLX, or POP
   33 00000000         ;mask in thumb mode
   34 00000000         ;---------------------------------------------------------------
   35 00000000         ;Vectors
   36 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0  ;KL46
   37 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   38 00000000         ;---------------------------------------------------------------
   39 00000000         ;CPU CONTROL:  Control register
   40 00000000         ;31-2:(reserved)
   41 00000000         ;   1:SPSEL=current stack pointer select
   42 00000000         ;           0=MSP (main stack pointer) (reset value)
   43 00000000         ;           1=PSP (process stack pointer)
   44 00000000         ;   0:nPRIV=not privileged
   45 00000000         ;        0=privileged (Freescale/NXP "supervisor") (reset value)
   46 00000000         ;        1=not privileged (Freescale/NXP "user")
   47 00000000 00000002 
                       CONTROL_SPSEL_MASK
                               EQU              2
   48 00000000 00000001 
                       CONTROL_SPSEL_SHIFT
                               EQU              1
   49 00000000 00000001 
                       CONTROL_nPRIV_MASK
                               EQU              1
   50 00000000 00000000 
                       CONTROL_nPRIV_SHIFT
                               EQU              0
   51 00000000         ;---------------------------------------------------------------
   52 00000000         ;CPU PRIMASK:  Interrupt mask register
   53 00000000         ;31-1:(reserved)
   54 00000000         ;   0:PM=prioritizable interrupt mask:
   55 00000000         ;        0=all interrupts unmasked (reset value)
   56 00000000         ;          (value after CPSIE I instruction)
   57 00000000         ;        1=prioritizable interrrupts masked



ARM Macro Assembler    Page 3 Program Title for Listing Header Goes Here


   58 00000000         ;          (value after CPSID I instruction)
   59 00000000 00000001 
                       PRIMASK_PM_MASK
                               EQU              1
   60 00000000 00000000 
                       PRIMASK_PM_SHIFT
                               EQU              0
   61 00000000         ;---------------------------------------------------------------
   62 00000000         ;CPU PSR:  Program status register
   63 00000000         ;Combined APSR, EPSR, and IPSR
   64 00000000         ;----------------------------------------------------------
   65 00000000         ;CPU APSR:  Application Program Status Register
   66 00000000         ;31  :N=negative flag
   67 00000000         ;30  :Z=zero flag
   68 00000000         ;29  :C=carry flag
   69 00000000         ;28  :V=overflow flag
   70 00000000         ;27-0:(reserved)
   71 00000000 F0000000 
                       APSR_MASK
                               EQU              0xF0000000
   72 00000000 0000001C 
                       APSR_SHIFT
                               EQU              28
   73 00000000 80000000 
                       APSR_N_MASK
                               EQU              0x80000000
   74 00000000 0000001F 
                       APSR_N_SHIFT
                               EQU              31
   75 00000000 40000000 
                       APSR_Z_MASK
                               EQU              0x40000000
   76 00000000 0000001E 
                       APSR_Z_SHIFT
                               EQU              30
   77 00000000 20000000 
                       APSR_C_MASK
                               EQU              0x20000000
   78 00000000 0000001D 
                       APSR_C_SHIFT
                               EQU              29
   79 00000000 10000000 



ARM Macro Assembler    Page 4 Program Title for Listing Header Goes Here


                       APSR_V_MASK
                               EQU              0x10000000
   80 00000000 0000001C 
                       APSR_V_SHIFT
                               EQU              28
   81 00000000         ;----------------------------------------------------------
   82 00000000         ;CPU EPSR
   83 00000000         ;31-25:(reserved)
   84 00000000         ;   24:T=Thumb state bit
   85 00000000         ;23- 0:(reserved)
   86 00000000 01000000 
                       EPSR_MASK
                               EQU              0x01000000
   87 00000000 00000018 
                       EPSR_SHIFT
                               EQU              24
   88 00000000 01000000 
                       EPSR_T_MASK
                               EQU              0x01000000
   89 00000000 00000018 
                       EPSR_T_SHIFT
                               EQU              24
   90 00000000         ;----------------------------------------------------------
   91 00000000         ;CPU IPSR
   92 00000000         ;31-6:(reserved)
   93 00000000         ; 5-0:Exception number=number of current exception
   94 00000000         ;      0=thread mode
   95 00000000         ;      1:(reserved)
   96 00000000         ;      2=NMI
   97 00000000         ;      3=hard fault
   98 00000000         ;      4-10:(reserved)
   99 00000000         ;     11=SVCall
  100 00000000         ;     12-13:(reserved)
  101 00000000         ;     14=PendSV
  102 00000000         ;     15=SysTick
  103 00000000         ;     16=IRQ0
  104 00000000         ;     16-47:IRQ(Exception number - 16)
  105 00000000         ;     47=IRQ31
  106 00000000         ;     48-63:(reserved)
  107 00000000 0000003F 
                       IPSR_MASK
                               EQU              0x0000003F



ARM Macro Assembler    Page 5 Program Title for Listing Header Goes Here


  108 00000000 00000000 
                       IPSR_SHIFT
                               EQU              0
  109 00000000 0000003F 
                       IPSR_EXCEPTION_MASK
                               EQU              0x0000003F
  110 00000000 00000000 
                       IPSR_EXCEPTION_SHIFT
                               EQU              0
  111 00000000         ;----------------------------------------------------------
  112 00000000 80000000 
                       PSR_N_MASK
                               EQU              APSR_N_MASK
  113 00000000 0000001F 
                       PSR_N_SHIFT
                               EQU              APSR_N_SHIFT
  114 00000000 40000000 
                       PSR_Z_MASK
                               EQU              APSR_Z_MASK
  115 00000000 0000001E 
                       PSR_Z_SHIFT
                               EQU              APSR_Z_SHIFT
  116 00000000 20000000 
                       PSR_C_MASK
                               EQU              APSR_C_MASK
  117 00000000 0000001D 
                       PSR_C_SHIFT
                               EQU              APSR_C_SHIFT
  118 00000000 10000000 
                       PSR_V_MASK
                               EQU              APSR_V_MASK
  119 00000000 0000001C 
                       PSR_V_SHIFT
                               EQU              APSR_V_SHIFT
  120 00000000 01000000 
                       PSR_T_MASK
                               EQU              EPSR_T_MASK
  121 00000000 00000018 
                       PSR_T_SHIFT
                               EQU              EPSR_T_SHIFT
  122 00000000 0000003F 
                       PSR_EXCEPTION_MASK



ARM Macro Assembler    Page 6 Program Title for Listing Header Goes Here


                               EQU              IPSR_EXCEPTION_MASK
  123 00000000 00000000 
                       PSR_EXCEPTION_SHIFT
                               EQU              IPSR_EXCEPTION_SHIFT
  124 00000000         ;----------------------------------------------------------
  125 00000000         ;Stack
  126 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
  127 00000000         ;****************************************************************
  128 00000000         ;Program
  129 00000000         ;Linker requires Reset_Handler
  130 00000000                 AREA             MyCode,CODE,READONLY
  131 00000000                 ENTRY
  132 00000000                 EXPORT           Reset_Handler
  133 00000000         Reset_Handler
                               PROC             {}
  134 00000000         main
  135 00000000         ;---------------------------------------------------------------
  136 00000000         ;Initialize registers R0-R12
  137 00000000 F7FF FFFE       BL               RegInit
  138 00000004         ;>>>>> begin main program code <<<<<
  139 00000004         ; Disable interrupts
  140 00000004 2012            MOVS             R0,#18      ;   R0 = 18
  141 00000006 220B            MOVS             R2,#11
  142 00000008 4251            RSBS             R1,R2,#0    ;   R1 = -11
  143 0000000A 1049            ASRS             R1,R1,#1    ;   R1 = R1 / 2
  144 0000000C 1840            ADDS             R0,R0,R1    ;   R0 = R0 + R1
  145 0000000E 210D            MOVS             R1,#13      ;   R1 = 13
  146 00000010 1840            ADDS             R0,R0,R1    ;   R0 = R0 + R1
  147 00000012 2105            MOVS             R1,#5       ;   R1 = 5
  148 00000014 00CA            LSLS             R2,R1,#3    ;   R2 = R1*8
  149 00000016 1852            ADDS             R2,R2,R1    ;   R2 = R2 + R1
  150 00000018 1880            ADDS             R0,R0,R2    ;   R0 = R0 + R2
  151 0000001A 212A            MOVS             R1,#42
  152 0000001C 1A40            SUBS             R0,R0,R1
  153 0000001E 2103            MOVS             R1,#3
  154 00000020 1840            ADDS             R0,R0,R1
  155 00000022         
  156 00000022         ;>>>>>   end main program code <<<<<
  157 00000022         ;Stay here
  158 00000022 E7FE            B                .



ARM Macro Assembler    Page 7 Program Title for Listing Header Goes Here


  159 00000024                 ENDP
  160 00000024         ;---------------------------------------------------------------
  161 00000024         RegInit PROC             {}
  162 00000024         ;****************************************************************
  163 00000024         ;Initializes register n to value 0xnnnnnnnn, for n in 
  164 00000024         ;{0x0-0xC,0xE}
  165 00000024         ;****************************************************************
  166 00000024         ;Put return on stack
  167 00000024 B500            PUSH             {LR}
  168 00000026         ;Initialize registers
  169 00000026 490B            LDR              R1,=0x11111111
  170 00000028 184A            ADDS             R2,R1,R1
  171 0000002A 1853            ADDS             R3,R2,R1
  172 0000002C 185C            ADDS             R4,R3,R1
  173 0000002E 1865            ADDS             R5,R4,R1
  174 00000030 186E            ADDS             R6,R5,R1
  175 00000032 1877            ADDS             R7,R6,R1
  176 00000034 1878            ADDS             R0,R7,R1
  177 00000036 4680            MOV              R8,R0
  178 00000038 1840            ADDS             R0,R0,R1
  179 0000003A 4681            MOV              R9,R0
  180 0000003C 1840            ADDS             R0,R0,R1
  181 0000003E 4682            MOV              R10,R0
  182 00000040 1840            ADDS             R0,R0,R1
  183 00000042 4683            MOV              R11,R0
  184 00000044 1840            ADDS             R0,R0,R1
  185 00000046 4684            MOV              R12,R0
  186 00000048 1840            ADDS             R0,R0,R1
  187 0000004A 1840            ADDS             R0,R0,R1
  188 0000004C 4686            MOV              R14,R0
  189 0000004E 2000            MOVS             R0,#0
  190 00000050 BD00            POP              {PC}
  191 00000052                 ENDP
  192 00000052         ;---------------------------------------------------------------
  193 00000052         ;>>>>> begin subroutine code <<<<<
  194 00000052         ;>>>>>   end subroutine code <<<<<
  195 00000052 00 00           ALIGN
  196 00000054         ;****************************************************************
  197 00000054         ;Vector Table Mapped to Address 0 at Reset
  198 00000054         ;Linker requires __Vectors to be exported
  199 00000054 11111111        AREA             RESET, DATA, READONLY
  200 00000000                 EXPORT           __Vectors



ARM Macro Assembler    Page 8 Program Title for Listing Header Goes Here


  201 00000000                 EXPORT           __Vectors_End
  202 00000000                 EXPORT           __Vectors_Size
  203 00000000         __Vectors
  204 00000000         ;ARM core vectors
  205 00000000 00000000        DCD              __initial_sp ;00:end of stack
  206 00000004 00000000        DCD              Reset_Handler ;reset vector
  207 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 9 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTOR_SIZE))
  208 000000C0         __Vectors_End
  209 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  210 000000C0                 ALIGN
  211 000000C0         ;****************************************************************
  212 000000C0         ;Constants
  213 000000C0                 AREA             MyConst,DATA,READONLY
  214 00000000         ;>>>>> begin constants here <<<<<
  215 00000000 0000000A 
              0000000B 
              00000010 
              0000000A ConstData
                               DCD              0x0000000A, 0x0000000B, 0x00000010, 10
  216 00000010         ;>>>>>   end constants here <<<<<
  217 00000010         ;****************************************************************



ARM Macro Assembler    Page 10 Program Title for Listing Header Goes Here


  218 00000010                 AREA             |.ARM.__at_0x1FFFE000|,DATA,READWRITE,ALIGN=3
  219 00000000                 EXPORT           __initial_sp
  220 00000000         ;Allocate system stack
  221 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  223                          ENDIF
  224 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 11 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 12 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  225 00000100         __initial_sp
  226 00000100         ;****************************************************************
  227 00000100         ;Variables
  228 00000100                 AREA             MyData,DATA,READWRITE
  229 00000000         ;>>>>> begin variables here <<<<<
  230 00000000 00 00 00 
              00 00 00 
              00 00    VarData SPACE            8
  231 00000008         ;>>>>>   end variables here <<<<<
  232 00000008                 END
Command Line: --debug --xref --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\o
bjects\exercise01.d -o.\objects\exercise01.o -I"C:\Users\Andrei Tumbar\AppData\Local\Arm\Packs\Keil\Kinetis_KLxx_DFP\1.1
4.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 531" 
--predefine="MKL46Z256xxx4 SETA 1" --list=.\listings\exercise01.lst Exercise01.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyCode 00000000

Symbol: MyCode
   Definitions
      At line 130 in file Exercise01.s
   Uses
      None
Comment: MyCode unused
RegInit 00000024

Symbol: RegInit
   Definitions
      At line 161 in file Exercise01.s
   Uses
      At line 137 in file Exercise01.s
Comment: RegInit used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 133 in file Exercise01.s
   Uses
      At line 132 in file Exercise01.s
      At line 206 in file Exercise01.s

main 00000000

Symbol: main
   Definitions
      At line 134 in file Exercise01.s
   Uses
      None
Comment: main unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 199 in file Exercise01.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 203 in file Exercise01.s
   Uses
      At line 200 in file Exercise01.s
      At line 209 in file Exercise01.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 208 in file Exercise01.s
   Uses
      At line 201 in file Exercise01.s
      At line 209 in file Exercise01.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ConstData 00000000

Symbol: ConstData
   Definitions
      At line 215 in file Exercise01.s
   Uses
      None
Comment: ConstData unused
MyConst 00000000

Symbol: MyConst
   Definitions
      At line 213 in file Exercise01.s
   Uses
      None
Comment: MyConst unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 218 in file Exercise01.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 224 in file Exercise01.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 225 in file Exercise01.s
   Uses
      At line 205 in file Exercise01.s
      At line 219 in file Exercise01.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 228 in file Exercise01.s
   Uses
      None
Comment: MyData unused
VarData 00000000

Symbol: VarData
   Definitions
      At line 230 in file Exercise01.s
   Uses
      None
Comment: VarData unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

APSR_C_MASK 20000000

Symbol: APSR_C_MASK
   Definitions
      At line 77 in file Exercise01.s
   Uses
      At line 116 in file Exercise01.s
Comment: APSR_C_MASK used once
APSR_C_SHIFT 0000001D

Symbol: APSR_C_SHIFT
   Definitions
      At line 78 in file Exercise01.s
   Uses
      At line 117 in file Exercise01.s
Comment: APSR_C_SHIFT used once
APSR_MASK F0000000

Symbol: APSR_MASK
   Definitions
      At line 71 in file Exercise01.s
   Uses
      None
Comment: APSR_MASK unused
APSR_N_MASK 80000000

Symbol: APSR_N_MASK
   Definitions
      At line 73 in file Exercise01.s
   Uses
      At line 112 in file Exercise01.s
Comment: APSR_N_MASK used once
APSR_N_SHIFT 0000001F

Symbol: APSR_N_SHIFT
   Definitions
      At line 74 in file Exercise01.s
   Uses
      At line 113 in file Exercise01.s
Comment: APSR_N_SHIFT used once
APSR_SHIFT 0000001C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: APSR_SHIFT
   Definitions
      At line 72 in file Exercise01.s
   Uses
      None
Comment: APSR_SHIFT unused
APSR_V_MASK 10000000

Symbol: APSR_V_MASK
   Definitions
      At line 79 in file Exercise01.s
   Uses
      At line 118 in file Exercise01.s
Comment: APSR_V_MASK used once
APSR_V_SHIFT 0000001C

Symbol: APSR_V_SHIFT
   Definitions
      At line 80 in file Exercise01.s
   Uses
      At line 119 in file Exercise01.s
Comment: APSR_V_SHIFT used once
APSR_Z_MASK 40000000

Symbol: APSR_Z_MASK
   Definitions
      At line 75 in file Exercise01.s
   Uses
      At line 114 in file Exercise01.s
Comment: APSR_Z_MASK used once
APSR_Z_SHIFT 0000001E

Symbol: APSR_Z_SHIFT
   Definitions
      At line 76 in file Exercise01.s
   Uses
      At line 115 in file Exercise01.s
Comment: APSR_Z_SHIFT used once
BYTE_BITS 00000008

Symbol: BYTE_BITS
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file Exercise01.s
   Uses
      None
Comment: BYTE_BITS unused
BYTE_MASK 000000FF

Symbol: BYTE_MASK
   Definitions
      At line 20 in file Exercise01.s
   Uses
      None
Comment: BYTE_MASK unused
CONTROL_SPSEL_MASK 00000002

Symbol: CONTROL_SPSEL_MASK
   Definitions
      At line 47 in file Exercise01.s
   Uses
      None
Comment: CONTROL_SPSEL_MASK unused
CONTROL_SPSEL_SHIFT 00000001

Symbol: CONTROL_SPSEL_SHIFT
   Definitions
      At line 48 in file Exercise01.s
   Uses
      None
Comment: CONTROL_SPSEL_SHIFT unused
CONTROL_nPRIV_MASK 00000001

Symbol: CONTROL_nPRIV_MASK
   Definitions
      At line 49 in file Exercise01.s
   Uses
      None
Comment: CONTROL_nPRIV_MASK unused
CONTROL_nPRIV_SHIFT 00000000

Symbol: CONTROL_nPRIV_SHIFT
   Definitions
      At line 50 in file Exercise01.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: CONTROL_nPRIV_SHIFT unused
EPSR_MASK 01000000

Symbol: EPSR_MASK
   Definitions
      At line 86 in file Exercise01.s
   Uses
      None
Comment: EPSR_MASK unused
EPSR_SHIFT 00000018

Symbol: EPSR_SHIFT
   Definitions
      At line 87 in file Exercise01.s
   Uses
      None
Comment: EPSR_SHIFT unused
EPSR_T_MASK 01000000

Symbol: EPSR_T_MASK
   Definitions
      At line 88 in file Exercise01.s
   Uses
      At line 120 in file Exercise01.s
Comment: EPSR_T_MASK used once
EPSR_T_SHIFT 00000018

Symbol: EPSR_T_SHIFT
   Definitions
      At line 89 in file Exercise01.s
   Uses
      At line 121 in file Exercise01.s
Comment: EPSR_T_SHIFT used once
HALFWORD_MASK 0000FFFF

Symbol: HALFWORD_MASK
   Definitions
      At line 29 in file Exercise01.s
   Uses
      None
Comment: HALFWORD_MASK unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

HALFWORD_SIZE 00000002

Symbol: HALFWORD_SIZE
   Definitions
      At line 27 in file Exercise01.s
   Uses
      None
Comment: HALFWORD_SIZE unused
IPSR_EXCEPTION_MASK 0000003F

Symbol: IPSR_EXCEPTION_MASK
   Definitions
      At line 109 in file Exercise01.s
   Uses
      At line 122 in file Exercise01.s
Comment: IPSR_EXCEPTION_MASK used once
IPSR_EXCEPTION_SHIFT 00000000

Symbol: IPSR_EXCEPTION_SHIFT
   Definitions
      At line 110 in file Exercise01.s
   Uses
      At line 123 in file Exercise01.s
Comment: IPSR_EXCEPTION_SHIFT used once
IPSR_MASK 0000003F

Symbol: IPSR_MASK
   Definitions
      At line 107 in file Exercise01.s
   Uses
      None
Comment: IPSR_MASK unused
IPSR_SHIFT 00000000

Symbol: IPSR_SHIFT
   Definitions
      At line 108 in file Exercise01.s
   Uses
      None
Comment: IPSR_SHIFT unused
NIBBLE_BITS 00000004




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: NIBBLE_BITS
   Definitions
      At line 24 in file Exercise01.s
   Uses
      None
Comment: NIBBLE_BITS unused
NIBBLE_MASK 0000000F

Symbol: NIBBLE_MASK
   Definitions
      At line 21 in file Exercise01.s
   Uses
      None
Comment: NIBBLE_MASK unused
PRIMASK_PM_MASK 00000001

Symbol: PRIMASK_PM_MASK
   Definitions
      At line 59 in file Exercise01.s
   Uses
      None
Comment: PRIMASK_PM_MASK unused
PRIMASK_PM_SHIFT 00000000

Symbol: PRIMASK_PM_SHIFT
   Definitions
      At line 60 in file Exercise01.s
   Uses
      None
Comment: PRIMASK_PM_SHIFT unused
PSR_C_MASK 20000000

Symbol: PSR_C_MASK
   Definitions
      At line 116 in file Exercise01.s
   Uses
      None
Comment: PSR_C_MASK unused
PSR_C_SHIFT 0000001D

Symbol: PSR_C_SHIFT
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 117 in file Exercise01.s
   Uses
      None
Comment: PSR_C_SHIFT unused
PSR_EXCEPTION_MASK 0000003F

Symbol: PSR_EXCEPTION_MASK
   Definitions
      At line 122 in file Exercise01.s
   Uses
      None
Comment: PSR_EXCEPTION_MASK unused
PSR_EXCEPTION_SHIFT 00000000

Symbol: PSR_EXCEPTION_SHIFT
   Definitions
      At line 123 in file Exercise01.s
   Uses
      None
Comment: PSR_EXCEPTION_SHIFT unused
PSR_N_MASK 80000000

Symbol: PSR_N_MASK
   Definitions
      At line 112 in file Exercise01.s
   Uses
      None
Comment: PSR_N_MASK unused
PSR_N_SHIFT 0000001F

Symbol: PSR_N_SHIFT
   Definitions
      At line 113 in file Exercise01.s
   Uses
      None
Comment: PSR_N_SHIFT unused
PSR_T_MASK 01000000

Symbol: PSR_T_MASK
   Definitions
      At line 120 in file Exercise01.s
   Uses



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PSR_T_MASK unused
PSR_T_SHIFT 00000018

Symbol: PSR_T_SHIFT
   Definitions
      At line 121 in file Exercise01.s
   Uses
      None
Comment: PSR_T_SHIFT unused
PSR_V_MASK 10000000

Symbol: PSR_V_MASK
   Definitions
      At line 118 in file Exercise01.s
   Uses
      None
Comment: PSR_V_MASK unused
PSR_V_SHIFT 0000001C

Symbol: PSR_V_SHIFT
   Definitions
      At line 119 in file Exercise01.s
   Uses
      None
Comment: PSR_V_SHIFT unused
PSR_Z_MASK 40000000

Symbol: PSR_Z_MASK
   Definitions
      At line 114 in file Exercise01.s
   Uses
      None
Comment: PSR_Z_MASK unused
PSR_Z_SHIFT 0000001E

Symbol: PSR_Z_SHIFT
   Definitions
      At line 115 in file Exercise01.s
   Uses
      None
Comment: PSR_Z_SHIFT unused



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

RET_ADDR_T_MASK 00000001

Symbol: RET_ADDR_T_MASK
   Definitions
      At line 31 in file Exercise01.s
   Uses
      None
Comment: RET_ADDR_T_MASK unused
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 126 in file Exercise01.s
   Uses
      At line 224 in file Exercise01.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 37 in file Exercise01.s
   Uses
      At line 207 in file Exercise01.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 36 in file Exercise01.s
   Uses
      At line 207 in file Exercise01.s
Comment: VECTOR_TABLE_SIZE used once
WORD_SIZE 00000004

Symbol: WORD_SIZE
   Definitions
      At line 26 in file Exercise01.s
   Uses
      None
Comment: WORD_SIZE unused
__Vectors_Size 000000C0




ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

Symbol: __Vectors_Size
   Definitions
      At line 209 in file Exercise01.s
   Uses
      At line 202 in file Exercise01.s
Comment: __Vectors_Size used once
48 symbols
397 symbols in table
